{
  "openapi": "3.0.2",
  "info": {
    "title": "Users API",
    "version": "1.0.0"
  },
  "paths": {
    "/users": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get Users",
        "operationId": "get_users",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Size",
              "type": "string"
            },
            "name": "size",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Page",
              "type": "string"
            },
            "name": "page",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Role",
              "type": "string"
            },
            "name": "role",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersPaginatedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create User",
        "operationId": "create_user_users_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Not Found Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get User By Id",
        "operationId": "get_user_by_id",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "User Id",
              "type": "integer"
            },
            "name": "user_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Update User",
        "operationId": "update_user_by_id",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "User Id",
              "type": "integer"
            },
            "name": "user_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Login",
        "operationId": "login_auth_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/google_login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Google Login",
        "operationId": "google_login_auth",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleLoginPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/authenticate": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Authenticate",
        "operationId": "authenticate_auth_authenticate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticatePayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/reviews": {
      "get": {
        "tags": [
          "reviews"
        ],
        "summary": "Get Reviews",
        "operationId": "get_reviews",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Reviewerid",
              "type": "string"
            },
            "name": "reviewerId",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Status",
              "type": "string"
            },
            "name": "status",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewProjectSearchResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "reviews"
        ],
        "summary": "Create Review",
        "operationId": "create_review",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewRequestPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/reviews/{review_id}": {
      "put": {
        "tags": [
          "reviews"
        ],
        "summary": "Update Review",
        "operationId": "update_review_reviews__review_id__put",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Review Id",
              "type": "integer"
            },
            "name": "review_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewUpdatePayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Hello World",
        "operationId": "hello_world__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthenticatePayload": {
        "title": "AuthenticatePayload",
        "required": [
          "authToken"
        ],
        "type": "object",
        "properties": {
          "authToken": {
            "title": "Authtoken",
            "type": "string"
          }
        }
      },
      "AuthenticateResponse": {
        "title": "AuthenticateResponse",
        "required": [
          "message",
          "identity"
        ],
        "type": "object",
        "properties": {
          "message": {
            "title": "Message",
            "type": "string"
          },
          "identity": {
            "title": "Identity",
            "type": "object"
          }
        }
      },
      "CreateUserPayload": {
        "title": "CreateUserPayload",
        "required": [
          "name",
          "lastName",
          "email",
          "password",
          "role"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "lastName": {
            "title": "Lastname",
            "type": "string"
          },
          "email": {
            "title": "Email",
            "type": "string"
          },
          "password": {
            "title": "Password",
            "type": "string"
          },
          "role": {
            "title": "Role",
            "type": "string"
          }
        }
      },
      "GoogleLoginPayload": {
        "title": "GoogleLoginPayload",
        "required": [
          "idToken"
        ],
        "type": "object",
        "properties": {
          "idToken": {
            "title": "Idtoken",
            "type": "string"
          }
        }
      },
      "LoginPayload": {
        "title": "LoginPayload",
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "title": "Email",
            "type": "string"
          },
          "password": {
            "title": "Password",
            "type": "string"
          }
        }
      },
      "LoginResponse": {
        "title": "LoginResponse",
        "required": [
          "user",
          "token"
        ],
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "token": {
            "title": "Token",
            "type": "string"
          }
        }
      },
      "Review": {
        "title": "Review",
        "required": [
          "reviewerId",
          "projectId",
          "id",
          "status",
          "createdAt",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "reviewerId": {
            "title": "Reviewerid",
            "type": "integer"
          },
          "projectId": {
            "title": "Projectid",
            "type": "integer"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "status": {
            "title": "Status",
            "type": "string"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string"
          }
        }
      },
      "ReviewProjectSearchResponse": {
        "title": "ReviewProjectSearchResponse",
        "required": [
          "size"
        ],
        "type": "object",
        "properties": {
          "size": {
            "title": "Size",
            "type": "integer"
          },
          "results": {
            "title": "Results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Review"
            }
          }
        }
      },
      "ReviewRequestPayload": {
        "title": "ReviewRequestPayload",
        "required": [
          "reviewerId",
          "projectId"
        ],
        "type": "object",
        "properties": {
          "reviewerId": {
            "title": "Reviewerid",
            "type": "integer"
          },
          "projectId": {
            "title": "Projectid",
            "type": "integer"
          }
        }
      },
      "ReviewStatus": {
        "title": "ReviewStatus",
        "enum": [
          "approved",
          "rejected"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "ReviewUpdatePayload": {
        "title": "ReviewUpdatePayload",
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/ReviewStatus"
          }
        }
      },
      "Role": {
        "title": "Role",
        "enum": [
          "reviewer",
          "sponsor",
          "entrepreneur",
          "admin"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "UpdateUserPayload": {
        "title": "UpdateUserPayload",
        "type": "object",
        "properties": {
          "description": {
            "title": "Description",
            "type": "string"
          },
          "status": {
            "title": "Status",
            "type": "string"
          }
        }
      },
      "User": {
        "title": "User",
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "lastName": {
            "title": "Lastname",
            "type": "string"
          },
          "email": {
            "title": "Email",
            "type": "string"
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          },
          "walletAddress": {
            "title": "Walletaddress",
            "type": "string"
          },
          "walletPrivateKey": {
            "title": "Walletprivatekey",
            "type": "string"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string"
          },
          "firebaseToken": {
            "title": "Firebasetoken",
            "type": "string"
          },
          "description": {
            "title": "Description",
            "type": "string"
          }
        }
      },
      "UsersPaginatedResponse": {
        "title": "UsersPaginatedResponse",
        "required": [
          "totalItems",
          "users",
          "totalPages",
          "currentPage"
        ],
        "type": "object",
        "properties": {
          "totalItems": {
            "title": "Totalitems",
            "type": "integer"
          },
          "users": {
            "title": "Users",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "totalPages": {
            "title": "Totalpages",
            "type": "integer"
          },
          "currentPage": {
            "title": "Currentpage",
            "type": "integer"
          }
        }
      },
      "ErrorResponse": {
        "title": "ErrorResponse",
        "type": "object",
        "properties": {
          "status": {
            "title": "Status",
            "type": "integer"
          },
          "message": {
            "title": "Message",
            "type": "string"
          }
        }
      }
    }
  }
}