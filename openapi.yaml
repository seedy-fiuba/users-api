openapi: 3.0.1
info:
  title: Users API
  description: >-
    This is the API responsable of the users entities CRUD, login and
    authorization in the microservicies ecosystem
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
servers:
  - url: 'https://github.com/seedyfiuba/users-api'
  - url: 'http://github.com/seedyfiuba/users-api'
tags:
  - name: user
    description: Everything about users
  - name: login
    description: Access to the platform
  - name: authentication
    description: Authentication of the users
    externalDocs:
      description: Find out more about our store
      url: 'http://swagger.io'
paths:
  /user/register:
    post:
      tags:
        - user
      summary: Register a new user
      operationId: addUser
      requestBody:
        description: User object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
        required: true
      responses:
        '405':
          description: Invalid input
          content: {}
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
      x-codegen-request-body-name: body
  /user/login:
    post:
      tags:
        - user
      summary: Login a user
      requestBody:
        description: Login into the system with email and password
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
        required: true
      responses:
        '405':
          description: Invalid input
          content: {}
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
      x-codegen-request-body-name: body
  /user/autheticate:
    post:
      tags:
        - user
      summary: Authentication with token
      requestBody:
        description: Authentication with token
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
        required: true
      responses:
        '405':
          description: Invalid input
          content: {}
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
      x-codegen-request-body-name: body
components:
  schemas:
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
        petId:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int32
        shipDate:
          type: string
          format: date-time
        status:
          type: string
          description: Order Status
          enum:
            - placed
            - approved
            - delivered
        complete:
          type: boolean
          default: false
      xml:
        name: Order
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: Category
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        phone:
          type: string
        userStatus:
          type: integer
          description: User Status
          format: int32
      xml:
        name: User
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: Tag
    Pet:
      required:
        - name
        - photoUrls
      type: object
      properties:
        id:
          type: integer
          format: int64
        category:
          $ref: '#/components/schemas/Category'
        name:
          type: string
          example: doggie
        photoUrls:
          type: array
          xml:
            name: photoUrl
            wrapped: true
          items:
            type: string
        tags:
          type: array
          xml:
            name: tag
            wrapped: true
          items:
            $ref: '#/components/schemas/Tag'
        status:
          type: string
          description: pet status in the store
          enum:
            - available
            - pending
            - sold
      xml:
        name: Pet
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'http://petstore.swagger.io/oauth/dialog'
          scopes:
            'write:pets': modify pets in your account
            'read:pets': read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header
